#!/bin/bash
#
#  Copyright (c) 2013-2014, Centre for Genomic Regulation (CRG).
#  Copyright (c) 2013-2014, Paolo Di Tommaso and the respective authors.
#
#  This file is part of Nextflow.
#
#  Nextflow is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Nextflow is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Nextflow.  If not, see <http://www.gnu.org/licenses/>.

function get() {
    if command -v wget &>/dev/null; then
        GET="wget -q $1 -O $2"
    elif command -v curl &>/dev/null; then
        GET="curl -fsSL $1 -o $2"
    else
        echo "Error: cannot find 'curl' nor 'wget' utility --  please install one of them"
        exit 1
    fi

    printf "Downloading nextflow dependencies. It may require some seconds, please wait .. "
    $GET; status=$?
    printf "\r\033[K"
    if [ $status -ne 0 ]; then
        echo "Error: cannot download nextflow required file -- make sure you can connect the internet"
        echo ""
        echo "Alternatively you can download the file:"
        echo "    $1"
        echo ""
        echo "And save it as:"
        echo "    ${3:-$2}"
        echo ""
        exit 1
    fi
}

function install() {
    if [ "$(uname)" = 'Darwin' ]; then tmpfile=$(mktemp $PWD/XXXXX) || exit $?
    else tmpfile=$(mktemp -t XXXXX --tmpdir=$PWD) || exit $?
    fi
    
    get "http://www.nextflow.io/releases/latest/nextflow" "$tmpfile" "$1" || exit $?
    mv $tmpfile $1 || exit $?
    chmod +x $1 || exit $?
    bash $1 -download || exit $?
    echo ''
    echo -e $'Nextflow installation completed. Please note:'
    echo -e $'- the executable file \'nextflow\' has been created in the folder:' $(dirname $1)
    echo -e $'- you may complete the installation copying it to directory in your $PATH'
    echo ''
}

# check self-install
if [ "$0" = "bash" ] || [ "$0" = "/bin/bash" ]; then
    if [ -d nextflow ]; then
        echo 'Please note:'
        echo "- The install procedure needs to create a file named 'nextflow' in this folder, but a directory with this name already exists."
        echo "- Please renamed/delete that directory, or execute the Nextflow install procedure in another folder."
        echo ''
        exit 1
    fi
    install "$PWD/nextflow"
    exit 0 
fi  

NXF_HOME=${NXF_HOME:-$HOME/.nextflow}
NXF_VER=${NXF_VER:-'0.7.1'}

# Check if it is required to run in background
bg=''
for opt in "$@"; do
    case $opt in
    -bg)
      bg=1;;
    gridgain)
      NXF_PACK='gg';;
    hazelcast)
      NXF_PACK='hz';;
    -d|-daemon.*)
      [[ $NXF_DAEMON_NAME = 'gridgain' || $NXF_EXECUTOR_NAME = 'gridgain' ]] && NXF_PACK='gg'
      [[ $NXF_DAEMON_NAME = 'hazelcast' || $NXF_EXECUTOR_NAME = 'hazelcast' ]] && NXF_PACK='hz'
      [ -z "$NXF_PACK" ] && NXF_PACK='gg';;
    -download)
      rm -rf $NXF_HOME/framework/$NXF_VER || exit $?
      $0 -version || exit $? 
      exit 0;;
    -self-update|self-update)
      install $0;
      exit 0;;
    esac
done


NXF_PACK=${NXF_PACK:-one}
NXF_JAR=${NXF_JAR:-nextflow-$NXF_VER-$NXF_PACK.jar}
NXF_BIN=${NXF_BIN:-$NXF_HOME/framework/$NXF_VER/$NXF_JAR}
NXF_BASE=${NXF_BASE:-http://www.nextflow.io/releases}
NXF_PATH=$(dirname $NXF_BIN)
NXF_URL=${NXF_URL:-$NXF_BASE/v$NXF_VER/$NXF_JAR}

if [ ! -f "$NXF_BIN" ]; then
    # Check Java version
    java -version 2>&1 | awk '/version/ {print $3}' | grep '"1\.7\..*"' > /dev/null
    if [ $? -ne 0 ]; then
         echo "Error: cannot find Java or it's a wrong version --  please make sure that Java 7 it's installed"
         exit 1
    fi

    mkdir -p $NXF_PATH || exit $?
    get "$NXF_URL" "$NXF_BIN"
fi

# Find out Java
JAVA=java
[[ -n "$JAVA_HOME" ]] && JAVA="$JAVA_HOME/bin/java"

if [ -z "NXF_OPTIONS" ]; then
    NXF_OPTIONS="-Djava.awt.headless=true -Xms512m"
else 
    NXF_OPTIONS="-Djava.awt.headless=true -Xms512m $NXF_OPTIONS"
fi

# Set the class-path
if [ -n "$NXF_CLASSPATH" ]; then
    NXF_OPTIONS="$NXF_OPTIONS -cp $NXF_CLASSPATH"
fi

# Start in daemon mode
if [ -n "$bg" ]; then
  NXF_PID_FILE=${NXF_PID_FILE:-'.nextflow.pid'}
  "$JAVA" $NXF_OPTIONS -jar "$NXF_BIN" "$@" &
  disown
  printf $! > $NXF_PID_FILE
  exit 0
fi

exec "$JAVA" $NXF_OPTIONS -jar "$NXF_BIN" "$@"
exit 1


